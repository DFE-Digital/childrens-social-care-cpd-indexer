name: Docker Publish

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  release:
    types: [published]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  RELEASE_TAG: ${{ github.event.release.tag_name }}

jobs:
  build:
    name: 'Docker Publish'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      # Checkout the release tag version
      - name: Checkout repository ${{ env.RELEASE_TAG }}
        uses: actions/checkout@v3
        with:
          ref: ${{ env.RELEASE_TAG }}

      # Get git commit hash
      - name: Get short hash
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # Need to lower case the image name for the docker tags when publishing
      - name: Downcase IMAGE_NAME variable
        run:  echo "IMAGE_NAME_LOWER=${IMAGE_NAME,,}" >> $GITHUB_ENV
      
      # Sort out the image tags 
      - name: Set initial tag
        run: echo "IMAGE_TAGS=${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}:${{ env.RELEASE_TAG }}" >> $GITHUB_ENV

      - name: Add latest tag if we're not production release
        if: contains(env.RELEASE_TAG, 'next')
        run: echo "IMAGE_TAGS=${{ env.IMAGE_TAGS }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}:latest" >> $GITHUB_ENV

      #debug
      - name: Log the tags
        run: echo "Calculated tags value => ${{ env.IMAGE_TAGS }}"

      # Setup docker build tool
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ./src/Childrens-Social-Care-CPD-Indexer
          #push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.IMAGE_TAGS }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VCSREF=${{ env.sha_short }}
            VCSTAG=${{ env.RELEASE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker image digest.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.2.0
      - name: Check install!
        run: cosign version
      - name: Sign the published Docker image
        # This step uses the identity token to provision an ephemeral certificate against the sigstore community Fulcio instance.
        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}
